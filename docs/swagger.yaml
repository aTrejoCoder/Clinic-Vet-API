basePath: /
definitions:
  dtos.OwnerInsertDTO:
    properties:
      name:
        type: string
      phone:
        type: string
      photo:
        type: string
    required:
    - name
    type: object
  dtos.OwnerReturnDTO:
    properties:
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      photo:
        type: string
    required:
    - name
    type: object
  dtos.OwnerUpdateDTO:
    properties:
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      photo:
        type: string
    required:
    - id
    type: object
  responses.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  responses.SuccessResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
  description: This is a sample server for a vet clinic.
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: Vet API
  version: "1.0"
paths:
  /owners:
    post:
      consumes:
      - application/json
      description: Create a new owner with the input payload
      parameters:
      - description: Owner to create
        in: body
        name: owner
        required: true
        schema:
          $ref: '#/definitions/dtos.OwnerInsertDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Create a new owner
      tags:
      - owners
    put:
      consumes:
      - application/json
      description: Update an owner with the input payload
      parameters:
      - description: Owner to update
        in: body
        name: owner
        required: true
        schema:
          $ref: '#/definitions/dtos.OwnerUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Update an owner
      tags:
      - owners
  /owners/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an owner by ID
      parameters:
      - description: Owner ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Delete an owner
      tags:
      - owners
    get:
      consumes:
      - application/json
      description: Get an owner by their ID
      parameters:
      - description: Owner ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OwnerReturnDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get an owner by ID
      tags:
      - owners
swagger: "2.0"
